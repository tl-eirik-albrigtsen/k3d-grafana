# Generated CRD
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: foos.clux.dev
spec:
  group: clux.dev
  names:
    kind: Foo
    plural: foos
    shortNames: []
    singular: foo
  scope: Namespaced
  versions:
    - additionalPrinterColumns: []
      name: v1
      schema:
        openAPIV3Schema:
          description: "Auto-generated derived type for FooSpec via `CustomResource`"
          properties:
            spec:
              description: Our Foo custom resource spec
              properties:
                info:
                  type: string
                name:
                  type: string
              required:
                - info
                - name
              type: object
            status:
              nullable: true
              properties:
                is_bad:
                  type: boolean
                last_updated:
                  format: date-time
                  nullable: true
                  type: string
              required:
                - is_bad
              type: object
          required:
            - spec
          title: Foo
          type: object
      served: true
      storage: true
      subresources:
        status: {}

---
# Scoped service account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: foo-controller
  namespace: default
automountServiceAccountToken: true

---
# Access for the service account
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: control-foos
rules:
  - apiGroups: ["clux.dev"]
    resources: ["foos", "foos/status"]
    verbs:
    - get
    - watch
    - list
    - patch

---
# Binding the role to the account in default
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: foo-controller-binding
subjects:
- kind: ServiceAccount
  namespace: default
  name: foo-controller
roleRef:
  kind: ClusterRole
  name: control-foos
  apiGroup: rbac.authorization.k8s.io

---
# Expose the http port of the service
apiVersion: v1
kind: Service
metadata:
  name: foo-controller
  namespace: default
  labels:
    app: foo-controller
spec:
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app: foo-controller

---
# Main deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: foo-controller
  namespace: default
  labels:
    app: foo-controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: foo-controller
  template:
    metadata:
      labels:
        app: foo-controller
    spec:
      serviceAccountName: foo-controller
      containers:
      - name: foo-controller
        image: "clux/controller:demo-otel"
        imagePullPolicy: Always
        resources:
          limits:
            cpu: 200m
            memory: 256Mi
          requests:
            cpu: 50m
            memory: 100Mi
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        env:
        - name: OPENTELEMETRY_ENDPOINT_URL
          value: "grafana-agent-traces.monitoring.svc.cluster.local:55680"
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
